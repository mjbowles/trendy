# Generated by Django 2.0.2 on 2018-02-19 20:54

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('make', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timeseries.Instrument')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='TimeSeriesDataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=255)),
                ('maxval', models.FloatField(blank=True, null=True)),
                ('minval', models.FloatField(blank=True, null=True)),
                ('tsdstype', models.CharField(choices=[('WD', 'Weir Depth'), ('BI', 'On/Off Status'), ('TL', 'Tank Level'), ('CL', 'Chlorine Reading'), ('RH', 'Run Hours'), ('TU', 'Turbidity Reading'), ('TE', 'Temperature')], max_length=100)),
                ('sensor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='timeseries.Sensor')),
            ],
        ),
        migrations.CreateModel(
            name='TSDatum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stamp', models.DateTimeField()),
                ('value', models.FloatField()),
                ('tsds', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timeseries.TimeSeriesDataSet')),
            ],
        ),
        migrations.CreateModel(
            name='TSDSCalibration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begindate', models.DateTimeField(default=django.utils.timezone.now)),
                ('factor', models.FloatField(default=1)),
                ('offset', models.FloatField(default=0)),
                ('units', models.CharField(max_length=100)),
                ('calibtype', models.CharField(choices=[('WEIR', 'WIER'), ('SIMPLE', 'SIMPLE'), ('CUSTOM', 'CUSTOM')], default='SIMPLE', max_length=25)),
                ('custom_function', models.CharField(max_length=254, null=True)),
                ('weira', models.FloatField(default=1, null=True)),
                ('weirb', models.FloatField(default=0, null=True)),
                ('weirc', models.FloatField(default=0, null=True)),
                ('weird', models.FloatField(default=2.5, null=True)),
                ('tsds', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timeseries.TimeSeriesDataSet')),
            ],
        ),
        migrations.AddField(
            model_name='instrument',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timeseries.Site'),
        ),
        migrations.AlterUniqueTogether(
            name='tsdatum',
            unique_together={('tsds', 'stamp')},
        ),
    ]
